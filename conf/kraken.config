/*
 * -------------------------------------------------
 * Nextflow config file for Sarek
 * -------------------------------------------------
 * Configuration for running on kraken
 * -------------------------------------------------
 */

env {
  NXF_WORK="/scratch"
}

process {
  executor = 'local'
}

params {
  max_memory   = 60.GB
  max_cpus     = 16
  max_time     = 72.h
  singleCPUMem = 3.75.GB
  totalMemory  = 60.GB
  genomes      = 'smallGRCh37'
  genome_base  = 'References/smallGRCh37'
}

executor.$local.cpus = 16


process {
  // Default process resources

  // A process may use one core,
  cpus = 1

  // 3.75 GB of memory,
  memory = {params.singleCPUMem}

  // and 16 of them are allowed to be launched simultaneously.
  maxForks = 16

  time = 48.h

  errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
  maxErrors = '-1'
  maxRetries = 3

  // These processes are defined in buildReferences.nf

  withName:BuildBWAindexes {
    memory = {params.totalMemory} // TODO This is likely too high
  }
  withName:BuildReferenceIndex {
    memory = {params.totalMemory} // TODO This is likely too high
  }
  withName:BuildSAMToolsIndex {
    memory = {params.totalMemory} // TODO This is likely too high
  }
  withName:BuildVCFIndex {
    memory = {params.totalMemory} // TODO This is likely too high
  }

  // These processes are defined in main.nf

  withName:ConcatVCF {
    cpus = 8
  }
  withName:CreateRecalibrationTable {
    cpus = 16
    memory = {params.totalMemory}
  }
  withName:MapReads {
    cpus = 16
    memory = {params.totalMemory}
  }
  withName:MarkDuplicates {
		// Actually the -Xmx value should be kept lower
    cpus = 16
    memory = {2 * params.singleCPUMem}
  }
  withName:MergeBams {
    cpus = 8
    memory = {params.totalMemory}
  }
  withName:RecalibrateBam {
    memory = {params.singleCPUMem * task.attempt}
  }
  withName:RunAlleleCount {
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  withName:RunAscat {
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  withName:RunBamQCmapped {
    cpus = 16
    memory = {params.totalMemory}
  }
  withName:RunBamQCrecalibrated {
    cpus = 16
    memory = {params.totalMemory}
  }
  withName:RunBcftoolsStats {
  }
  withName:RunConvertAlleleCounts {
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  withName:RunFastQC {
    cpus = 2 // FastQC is only capable of running one thread per fastq file.
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
  withName:RunFreeBayes {
    memory = {params.singleCPUMem * task.attempt}
  }
  withName:RunHaplotypecaller {
    // Increase memory quadratically
    memory = {params.singleCPUMem * task.attempt * task.attempt}
  }
  withName:RunGenotypeGVCFs {
  }
  withName:RunManta {
    cpus = 16
    memory = {params.totalMemory}
  }
  withName:RunMultiQC {
  }
  withName:RunMutect2 {
    memory = {params.singleCPUMem * task.attempt}
  }
  withName:RunSamtoolsStats {
  }
  withName:RunSingleManta {
    cpus = 16
    memory = {params.totalMemory}
  }
  withName:RunSingleStrelka {
    cpus = 16
    memory = {params.totalMemory}
  }
  withName:RunSnpeff {
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
    memory = {params.singleCPUMem * task.attempt}
  }
  withName:RunStrelka {
    cpus = 16
    memory = {params.totalMemory}
  }
  withName:RunVEP {
    cpus = 4
    errorStrategy = {task.exitStatus == 143 ? 'retry' : 'ignore'}
  }
}
