/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 * Nextflow config file for CAW project
 * -------------------------------------------------
 * Configuration for a simple desktop/laptop machine
 * without docker, using 6 CPUs, 12G mem
 * -------------------------------------------------
 */

params {
  singleCPUMem  = 2.GB
}

process {
  cpus = 6  // this is the default for example when a multithreaded process uses all the available CPUs
  errorStrategy = {task.exitStatus == 143 ? 'retry' : 'terminate'}
  maxErrors = '-1'
  maxForks = 2  // number of processess launched. If your process is using only a single CPU, and not that much memory, you can increase this value
  maxRetries = 3
  memory = 12.GB  // default assigned memory value for a single process

  $BuildBWAindexes {
  }
  $BuildPicardIndex {
  }
  $BuildSAMToolsIndex {
  }
  $BuildVCFIndex {
  }
  $ConcatVCF {
  }
  $CreateRecalibrationTable {
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $IndelRealigner {
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $MapReads {
    memory = {params.singleCPUMem * task.attempt}
  }
  $MarkDuplicates {
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $MergeBams {
    memory = {params.singleCPUMem * task.attempt}
  }
  $RealignerTargetCreator {
    memory = {params.singleCPUMem * 4 * task.attempt}
    cpus = 4
  }
  $RecalibrateBam {
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunAlleleCount {
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunAscat {
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunBamQC {
    cpus = 1
  }
  $RunBcftoolsStats {
    cpus = 1
  }
  $RunConvertAlleleCounts {
    cpus = 1
    memory = {params.singleCPUMem * 2 * task.attempt}
  }
  $RunFastQC {
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunFreeBayes {
    cpus = 1
    maxForks = 6
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunHaplotypecaller {
    cpus = 1
    memory = {params.singleCPUMem * task.attempt * task.attempt } // this way the memory will increase quadratically as 8G, 32G, 72G
    maxForks = 6  // if you are running out of memory on a single node, due to task re-runs, decrease this value
  }
  $RunGenotypeGVCFs {
    cpus = 1
    memory = {params.singleCPUMem}
  }
  $RunManta {
  }
  $RunMultiQC {
    cpus = 1
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunMutect1 {
    cpus = 1
    maxForks = 6
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunMutect2 {
    cpus = 1
    maxForks = 6
    memory = {params.singleCPUMem * task.attempt}
  }
  $RunSamtoolsStats {
    cpus = 1
  }
  $RunSnpeff {
    cpus = 1
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
  $RunStrelka {
  }
  $RunVEP {
    cpus = 1
    errorStrategy = { task.exitStatus == 143 ? 'retry' : 'ignore' }
  }
}
